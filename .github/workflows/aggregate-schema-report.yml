name: Aggregate Schema Diff Report

on:
  workflow_dispatch:
    inputs:
      config_path:
        description: "Path to repos config (YAML)"
        default: ".github/schema-repos.yml"
        required: true
      tag_selector:
        description: "Tag selection: auto | latest | pattern:<regex>"
        default: "auto"
        required: true

permissions:
  contents: read
  actions: write

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.mk.outputs.matrix }}
    steps:
      - name: Checkout central repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install yq & jq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq
          YQ_BIN=/usr/local/bin/yq
          sudo curl -L "https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64" -o "$YQ_BIN"
          sudo chmod +x "$YQ_BIN"
          yq --version

      - id: mk
        name: Build matrix from config (yq)
        env:
          CFG: ${{ github.event.inputs.config_path }}
        run: |
          set -euo pipefail
          : "${CFG:=.github/schema-repos.yml}"
          echo "Using config: $CFG"
          if [[ ! -f "$CFG" ]]; then
            echo "::error::Config file not found at $CFG"
            exit 1
          fi

          # Expecting:
          # repos:
          #   - name: khandramai/a
          #     paths: ["ramlsa"]
          #   - name: khandramai/b
          #     paths:
          #       - ramlsb
          json=$(yq -o=json '.repos | map({repo: .name, paths: (.paths // [])})' "$CFG")

          # Validate JSON
          echo "$json" | jq -e 'type=="array" and length>0' >/dev/null || { echo "::error::No repos in config"; exit 1; }

          # Wrap into matrix.include
          matrix=$(jq -c '{include: .}' <<<"$json")
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"
          echo "Built matrix: $matrix"

  per-repo:
    name: Build report for ${{ matrix.repo }}
    needs: build-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.build-matrix.outputs.matrix) }}
    steps:
      - name: Run schema diff (composite action from repo c)
        id: run
        uses: ./.github/actions/schema-diff
        with:
          repo: ${{ matrix.repo }}
          paths_json: ${{ toJson(matrix.paths) }}
          tag_selector: ${{ github.event.inputs.tag_selector }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.repo }}-${{ steps.run.outputs.prev_tag }}__${{ steps.run.outputs.curr_tag }}"
          path: ${{ steps.run.outputs.report_dir }}
          if-no-files-found: error

  aggregate:
    name: Aggregate summary
    needs: per-repo
    runs-on: ubuntu-latest
    steps:
      - name: Summary
        run: |
          {
            echo "# Combined Schema Diff Report"
            echo
            echo "Артефакты доступны в разделе **Artifacts**:"
            echo "- Имя: \`<owner/repo>-<prev>__<curr>\` (например, \`khandramai/a-1.2.3__1.2.4\`)"
            echo "- Содержимое: \`README.md\` + сабрепорты (.md) по указанным путям"
          } >> "$GITHUB_STEP_SUMMARY"
